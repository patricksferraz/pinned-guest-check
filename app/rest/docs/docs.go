// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag

package docs

import (
	"bytes"
	"encoding/json"
	"strings"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "Coding4u",
            "email": "contato@coding4u.com.br"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/guest-checks": {
            "get": {
                "description": "Router for search guest checks",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Guest Check"
                ],
                "summary": "search guest checks",
                "operationId": "searchGuestChecks",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page size",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "page token",
                        "name": "page_token",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rest.SearchGuestChecksResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/rest.HTTPResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/rest.HTTPResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Router for create a new guest check",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Guest Check"
                ],
                "summary": "create a new guest check",
                "operationId": "createGuestCheck",
                "parameters": [
                    {
                        "description": "JSON body for create a new guest check",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/rest.CreateGuestCheckRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rest.IDResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/rest.HTTPResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/rest.HTTPResponse"
                        }
                    }
                }
            }
        },
        "/guest-checks/{guest_check_id}": {
            "get": {
                "description": "Router for find a gust check",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Guest Check"
                ],
                "summary": "find a gust check",
                "operationId": "findGuestCheck",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Guest check ID",
                        "name": "guest_check_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rest.GuestCheck"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/rest.HTTPResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/rest.HTTPResponse"
                        }
                    }
                }
            }
        },
        "/guest-checks/{guest_check_id}/cancel": {
            "post": {
                "description": "Router for cancel a guest check",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Guest Check"
                ],
                "summary": "cancel a guest check",
                "operationId": "cancelGuestCheck",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Guest check ID",
                        "name": "guest_check_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "JSON body for cancel a guest check",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/rest.CancelGuestCheckRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rest.HTTPResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/rest.HTTPResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/rest.HTTPResponse"
                        }
                    }
                }
            }
        },
        "/guest-checks/{guest_check_id}/items": {
            "post": {
                "description": "Router for add a guest check item",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Guest Check"
                ],
                "summary": "add a guest check item",
                "operationId": "addGuestCheckItem",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Guest check ID",
                        "name": "guest_check_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "JSON body for add a new guest check item",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/rest.AddGuestCheckItemRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rest.IDResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/rest.HTTPResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/rest.HTTPResponse"
                        }
                    }
                }
            }
        },
        "/guest-checks/{guest_check_id}/items/{guest_check_item_id}": {
            "get": {
                "description": "Router for find a guest check item",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Guest Check"
                ],
                "summary": "find a guest check item",
                "operationId": "findGuestCheckItem",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Guest check ID",
                        "name": "guest_check_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Guest check item ID",
                        "name": "guest_check_item_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rest.GuestCheckItem"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/rest.HTTPResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/rest.HTTPResponse"
                        }
                    }
                }
            }
        },
        "/guest-checks/{guest_check_id}/items/{guest_check_item_id}/cancel": {
            "post": {
                "description": "Router for cancel a guest check item",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Guest Check"
                ],
                "summary": "cancel a guest check item",
                "operationId": "cancelGuestCheckItem",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Guest check ID",
                        "name": "guest_check_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Guest check item ID",
                        "name": "guest_check_item_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "JSON body for cancel a guest check item",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/rest.CancelGuestCheckItemRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rest.HTTPResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/rest.HTTPResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/rest.HTTPResponse"
                        }
                    }
                }
            }
        },
        "/guest-checks/{guest_check_id}/items/{guest_check_item_id}/deliver": {
            "post": {
                "description": "Router for deliver a guest check item",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Guest Check"
                ],
                "summary": "deliver a guest check item",
                "operationId": "deliverGuestCheckItem",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Guest check ID",
                        "name": "guest_check_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Guest check item ID",
                        "name": "guest_check_item_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rest.HTTPResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/rest.HTTPResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/rest.HTTPResponse"
                        }
                    }
                }
            }
        },
        "/guest-checks/{guest_check_id}/items/{guest_check_item_id}/forward": {
            "post": {
                "description": "Router for forward a guest check item",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Guest Check"
                ],
                "summary": "forward a guest check item",
                "operationId": "forwardGuestCheckItem",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Guest check ID",
                        "name": "guest_check_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Guest check item ID",
                        "name": "guest_check_item_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rest.HTTPResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/rest.HTTPResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/rest.HTTPResponse"
                        }
                    }
                }
            }
        },
        "/guest-checks/{guest_check_id}/items/{guest_check_item_id}/prepare": {
            "post": {
                "description": "Router for prepare a guest check item",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Guest Check"
                ],
                "summary": "prepare a guest check item",
                "operationId": "prepareGuestCheckItem",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Guest check ID",
                        "name": "guest_check_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Guest check item ID",
                        "name": "guest_check_item_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rest.HTTPResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/rest.HTTPResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/rest.HTTPResponse"
                        }
                    }
                }
            }
        },
        "/guest-checks/{guest_check_id}/items/{guest_check_item_id}/ready": {
            "post": {
                "description": "Router for ready a guest check item",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Guest Check"
                ],
                "summary": "ready a guest check item",
                "operationId": "readyGuestCheckItem",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Guest check ID",
                        "name": "guest_check_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Guest check item ID",
                        "name": "guest_check_item_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rest.HTTPResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/rest.HTTPResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/rest.HTTPResponse"
                        }
                    }
                }
            }
        },
        "/guest-checks/{guest_check_id}/pay": {
            "post": {
                "description": "Router for pay a guest check",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Guest Check"
                ],
                "summary": "pay a guest check",
                "operationId": "payGuestCheck",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Guest check ID",
                        "name": "guest_check_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "JSON body for pay a guest check",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/rest.PayGuestCheckRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rest.HTTPResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/rest.HTTPResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/rest.HTTPResponse"
                        }
                    }
                }
            }
        },
        "/guest-checks/{guest_check_id}/wait-payment": {
            "post": {
                "description": "Router for wait payment a guest check",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Guest Check"
                ],
                "summary": "wait payment a guest check",
                "operationId": "waitPaymentGuestCheck",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Guest check ID",
                        "name": "guest_check_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rest.HTTPResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/rest.HTTPResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/rest.HTTPResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "rest.AddGuestCheckItemRequest": {
            "type": "object",
            "properties": {
                "item_code": {
                    "type": "integer"
                },
                "note": {
                    "type": "string"
                },
                "quantity": {
                    "type": "integer"
                }
            }
        },
        "rest.CancelGuestCheckItemRequest": {
            "type": "object",
            "properties": {
                "canceled_reason": {
                    "type": "string"
                }
            }
        },
        "rest.CancelGuestCheckRequest": {
            "type": "object",
            "properties": {
                "canceled_reason": {
                    "type": "string"
                }
            }
        },
        "rest.CreateGuestCheckRequest": {
            "type": "object",
            "properties": {
                "guest_id": {
                    "type": "string"
                },
                "local": {
                    "type": "string"
                },
                "place_id": {
                    "type": "string"
                }
            }
        },
        "rest.GuestCheck": {
            "type": "object",
            "properties": {
                "canceled_reason": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "final_price": {
                    "type": "number"
                },
                "guest_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "local": {
                    "type": "string"
                },
                "place_id": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "total_discount": {
                    "type": "number"
                },
                "total_price": {
                    "type": "number"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "rest.GuestCheckItem": {
            "type": "object",
            "properties": {
                "canceled_reason": {
                    "type": "string"
                },
                "code": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "discount": {
                    "type": "number"
                },
                "final_price": {
                    "type": "number"
                },
                "guest_check_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "note": {
                    "type": "string"
                },
                "quantity": {
                    "type": "integer"
                },
                "status": {
                    "type": "integer"
                },
                "tag": {
                    "type": "string"
                },
                "total_price": {
                    "type": "number"
                },
                "unit_price": {
                    "type": "number"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "rest.HTTPResponse": {
            "type": "object",
            "properties": {
                "msg": {
                    "type": "string",
                    "example": "any message"
                }
            }
        },
        "rest.IDResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "rest.PayGuestCheckRequest": {
            "type": "object",
            "properties": {
                "tip": {
                    "type": "number"
                }
            }
        },
        "rest.SearchGuestChecksResponse": {
            "type": "object",
            "properties": {
                "guest_checks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/rest.GuestCheck"
                    }
                },
                "next_page_token": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "1.0",
	Host:        "",
	BasePath:    "/api/v1",
	Schemes:     []string{},
	Title:       "Guest Check Swagger API",
	Description: "Swagger API for Guest Check Service.",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
